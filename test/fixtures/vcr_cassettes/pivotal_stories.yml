---
http_interactions:
- request:
    method: get
    uri: https://www.pivotaltracker.com/services/v5/projects/2121054
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Ruby/2.4.1 (x86_64-darwin17; ruby) TrackerApi/1.8.0 Faraday/0.12.2
      X-Trackertoken:
      - "<PIVOTAL_SECRET_TOKEN>"
  response:
    status:
      code: 200
      message: OK
    headers:
      Access-Control-Allow-Credentials:
      - 'false'
      Access-Control-Allow-Headers:
      - X-TrackerToken,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Tracker-Warn-Unless-Project-Version-Is
      Access-Control-Allow-Methods:
      - GET, POST, PUT, DELETE, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Mon, 25 Dec 2017 19:03:03 GMT
      Etag:
      - '"cda02b87d79346d04c49d471ae6a1da7"'
      Server:
      - nginx + Phusion Passenger
      Status:
      - 200 OK
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      X-Powered-By:
      - Phusion Passenger Enterprise
      X-Rack-Cache:
      - miss
      X-Request-Id:
      - 01a8e78337908d8213b10c4fbfdbac8c
      X-Runtime:
      - '0.052252'
      X-Tracker-Client-Pinger-Interval:
      - '20'
      X-Tracker-Project-Version:
      - '1350'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Vcap-Request-Id:
      - 692a0f2d-44e6-477d-420a-f57798f2c130
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '765'
      Via:
      - 1.1 google
      Alt-Svc:
      - clear
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJpZCI6MjEyMTA1NCwia2luZCI6InByb2plY3QiLCJuYW1lIjoiRMOpdmVsb3BwZW1lbnQgS2V5YmFiIiwidmVyc2lvbiI6MTM1MCwiaXRlcmF0aW9uX2xlbmd0aCI6Miwid2Vla19zdGFydF9kYXkiOiJUdWVzZGF5IiwicG9pbnRfc2NhbGUiOiIwLDEsMiwzLDUsOCIsInBvaW50X3NjYWxlX2lzX2N1c3RvbSI6ZmFsc2UsImJ1Z3NfYW5kX2Nob3Jlc19hcmVfZXN0aW1hdGFibGUiOmZhbHNlLCJhdXRvbWF0aWNfcGxhbm5pbmciOmZhbHNlLCJlbmFibGVfdGFza3MiOnRydWUsInRpbWVfem9uZSI6eyJraW5kIjoidGltZV96b25lIiwib2xzb25fbmFtZSI6IkV1cm9wZS9BbXN0ZXJkYW0iLCJvZmZzZXQiOiIrMDE6MDAifSwidmVsb2NpdHlfYXZlcmFnZWRfb3ZlciI6MywibnVtYmVyX29mX2RvbmVfaXRlcmF0aW9uc190b19zaG93IjoxMiwiaGFzX2dvb2dsZV9kb21haW4iOmZhbHNlLCJlbmFibGVfaW5jb21pbmdfZW1haWxzIjp0cnVlLCJpbml0aWFsX3ZlbG9jaXR5Ijo1MCwicHVibGljIjpmYWxzZSwiYXRvbV9lbmFibGVkIjpmYWxzZSwicHJvamVjdF90eXBlIjoicHJpdmF0ZSIsInN0YXJ0X2RhdGUiOiIyMDE3LTEwLTMxIiwic3RhcnRfdGltZSI6IjIwMTctMTAtMzBUMjM6MDA6MDBaIiwiY3JlYXRlZF9hdCI6IjIwMTctMTAtMTlUMDc6MzE6MzNaIiwidXBkYXRlZF9hdCI6IjIwMTctMTEtMTdUMTM6NDE6NTVaIiwiYWNjb3VudF9pZCI6NTkzMzc2LCJjdXJyZW50X2l0ZXJhdGlvbl9udW1iZXIiOjUsImVuYWJsZV9mb2xsb3dpbmciOnRydWV9
    http_version: 
  recorded_at: Mon, 25 Dec 2017 19:03:03 GMT
- request:
    method: get
    uri: https://www.pivotaltracker.com/services/v5/projects/2121054/stories
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Ruby/2.4.1 (x86_64-darwin17; ruby) TrackerApi/1.8.0 Faraday/0.12.2
      X-Trackertoken:
      - "<PIVOTAL_SECRET_TOKEN>"
  response:
    status:
      code: 200
      message: OK
    headers:
      Access-Control-Allow-Credentials:
      - 'false'
      Access-Control-Allow-Headers:
      - X-TrackerToken,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Tracker-Warn-Unless-Project-Version-Is
      Access-Control-Allow-Methods:
      - GET, POST, PUT, DELETE, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Mon, 25 Dec 2017 19:03:03 GMT
      Etag:
      - '"af42625dd88eb055e78fbad7a8e605cb"'
      Server:
      - nginx + Phusion Passenger
      Status:
      - 200 OK
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      X-Powered-By:
      - Phusion Passenger Enterprise
      X-Rack-Cache:
      - miss
      X-Request-Id:
      - 52637be940ac81e4eaea8f366d34aa35
      X-Runtime:
      - '0.042981'
      X-Tracker-Client-Pinger-Interval:
      - '20'
      X-Tracker-Pagination-Limit:
      - '100'
      X-Tracker-Pagination-Offset:
      - '0'
      X-Tracker-Pagination-Returned:
      - '96'
      X-Tracker-Pagination-Total:
      - '96'
      X-Tracker-Project-Version:
      - '1350'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Vcap-Request-Id:
      - 9e20a33d-e35d-4ced-5698-c88ea40462ee
      X-Xss-Protection:
      - 1; mode=block
      Via:
      - 1.1 google
      Alt-Svc:
      - clear
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Mon, 25 Dec 2017 19:03:04 GMT
recorded_with: VCR 4.0.0
